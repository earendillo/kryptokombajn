{"version":3,"sources":["components/StochValueContainer.tsx","App.tsx","index.tsx"],"names":["StochValueContainer","props","useState","countedStochs","setCountedStochs","useEffect","getKlines1h","getKlines","pairSymbol","getKlines4h","getKlines1d","calculateStoch","last14records","lastPrice","parseFloat","length","maxPrice","map","kline","sort","compareNumbers","minPrice","axios","all","then","spread","allData","dataArray","data","symbol","pair","split","join","pairUrl","className","href","target","value","key","Math","random","style","calculateBgColor","toFixed","interval","get","params","limit","backgroundColor","a","b","App","symbolsUSDT","pairSymbols","symbols","setSymbols","response","filter","status","quoteAsset","obj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAQO,SAASA,EAAoBC,GAAkC,IAAD,EACvBC,mBAAS,IADc,mBAC1DC,EAD0D,KAC3CC,EAD2C,OAEnCF,mBAAS,IAF0B,6BAIjEG,qBAAU,WACN,IAAMC,EAAcC,EAAUN,EAAMO,WAAY,MAC1CC,EAAcF,EAAUN,EAAMO,WAAY,MAC1CE,EAAcH,EAAUN,EAAMO,WAAY,MAahD,SAASG,EAAeC,GACpB,IAAMC,EAAYC,WAAWF,EAAcA,EAAcG,OAAO,GAAG,IAC7DC,EAAWJ,EAAcK,KAAI,SAACC,GAAD,OAAgBJ,WAAWI,EAAM,OAAKC,KAAKC,GAAgBR,EAAcG,OAAO,GAC7GM,EAAWT,EAAcK,KAAI,SAACC,GAAD,OAAgBJ,WAAWI,EAAM,OAAKC,KAAKC,GAAgB,GAE9F,OAAO,KAAKP,EAAYQ,IAAWL,EAAWK,GAjBlDC,IAAMC,IAAI,CAACjB,EAAaG,EAAaC,IAAcc,KAC/CF,IAAMG,QAAO,WAAiB,IAAD,uBAAZC,EAAY,yBAAZA,EAAY,gBACzB,IAAMvB,EAAgBuB,EAAQT,KAAI,SAAAU,GAAS,OAAIhB,EAAegB,EAAUC,SACxE,MAAO,CACHC,OAAQ5B,EAAMO,WACdL,qBAGVqB,MAAK,SAACI,GACJxB,EAAiBwB,EAAKzB,oBAU3B,CAACF,EAAMO,aAEV,IAAMsB,EAAO7B,EAAMO,WAAWuB,MAAM,QAAQC,KAAK,SAC3CC,EAAO,2CAAuCH,GAEpD,OACI,yBAAKI,UAAU,yBACX,0BAAMA,UAAU,eAAc,uBAAGC,KAAMF,EAASG,OAAO,UAAUnC,EAAMO,aAEnEL,EAAcc,KAAI,SAACoB,GACf,OACI,0BACIC,IAAmB,GAAdC,KAAKC,SACVN,UAAU,cACVO,MAAOC,EAAiBL,IAEvBA,EAAMM,QAAQ,QAQvC,SAASpC,EAAUsB,EAAgBe,GAC/B,OAAOtB,IAAMuB,IAAI,wCAAyC,CACtDC,OAAQ,CACJjB,SACAe,WACAG,MAAO,MAKnB,SAASL,EAAiBL,GACtB,MAAO,CAAEW,gBAAiBX,GAAS,GAAT,uBAA8B,EAAI,EAAEA,EAAM,IAA1C,KAAmD,WAKjF,SAASjB,EAAe6B,EAAWC,GAC/B,OAAOD,EAAIC,GCjCJC,MAtCf,WAAgB,IAEVC,EAKAC,EAPS,EACmBnD,mBAAS,IAD5B,mBACJoD,EADI,KACKC,EADL,KAmBb,OAVElD,qBAAU,WACNiB,IAAMuB,IAAI,+CAA+CrB,MAAK,SAAAgC,GAC1D,IAAMF,EAAUE,EAAS5B,KAAK0B,QAAQG,QAAO,SAAC5B,GAAD,MAAmC,YAAlBA,EAAO6B,UACrEN,EAAcE,EAAQG,QAAO,SAAC5B,GAAD,MAAuC,SAAtBA,EAAO8B,cACvCL,EAAQG,QAAO,SAAC5B,GAAD,MAAuC,SAAtBA,EAAO8B,cACrDN,EAAcD,EAAYnC,KAAI,SAAC2C,GAAD,OAAcA,EAAI/B,UAChD0B,EAAWF,QAEhB,IAGH,yBAAKnB,UAAU,OACX,kEAEA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gCACX,0BAAMA,UAAU,eAAhB,eACA,0BAAMA,UAAU,eAAhB,YACA,0BAAMA,UAAU,eAAhB,YACA,0BAAMA,UAAU,eAAhB,aAEHoB,EAAQrC,KAAI,SAAAT,GACT,OAAO,kBAAC,EAAD,CAAqB8B,IAAK9B,EAAYA,WAAYA,UC/BzEqD,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAENC,SAASC,eAAe,W","file":"static/js/main.08c8a329.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './StochValueContainer.scss';\r\nimport axios from \"axios\";\r\n\r\ninterface StochValueContainerProps {\r\n    pairSymbol: string;\r\n}\r\n\r\nexport function StochValueContainer(props: StochValueContainerProps) {\r\n    const [countedStochs, setCountedStochs] = useState([]);\r\n    const [bgColor, setBgColor] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getKlines1h = getKlines(props.pairSymbol, \"1h\");\r\n        const getKlines4h = getKlines(props.pairSymbol, \"4h\");\r\n        const getKlines1d = getKlines(props.pairSymbol, \"1d\");\r\n        axios.all([getKlines1h, getKlines4h, getKlines1d]).then(\r\n            axios.spread((...allData) => {\r\n                const countedStochs = allData.map(dataArray => calculateStoch(dataArray.data));\r\n                return {\r\n                    symbol: props.pairSymbol,\r\n                    countedStochs\r\n                }\r\n            })\r\n        ).then((data) => {\r\n            setCountedStochs(data.countedStochs as any)\r\n        })\r\n\r\n        function calculateStoch(last14records: any): number {\r\n            const lastPrice = parseFloat(last14records[last14records.length-1][4]);\r\n            const maxPrice = last14records.map((kline: any) => parseFloat(kline[2])).sort(compareNumbers)[last14records.length-1];\r\n            const minPrice = last14records.map((kline: any) => parseFloat(kline[3])).sort(compareNumbers)[0];\r\n\r\n            return 100*(lastPrice - minPrice)/(maxPrice - minPrice);\r\n        }\r\n    }, [props.pairSymbol])\r\n\r\n    const pair = props.pairSymbol.split('USDT').join('_USDT');\r\n    const pairUrl = `https://www.binance.com/en/trade/${pair}`\r\n\r\n    return (\r\n        <div className='stoch-value-container'>\r\n            <span className='pair-symbol'><a href={pairUrl} target='_blank'>{props.pairSymbol}</a></span>\r\n            {\r\n                countedStochs.map((value: any) => {\r\n                    return (\r\n                        <span\r\n                            key={Math.random()*10}\r\n                            className='stoch-value'\r\n                            style={calculateBgColor(value)}\r\n                        >\r\n                            {value.toFixed(2)}\r\n                        </span>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n    function getKlines(symbol: string, interval: string) {\r\n        return axios.get('https://api.binance.com/api/v1/klines', {\r\n            params: {\r\n                symbol,\r\n                interval,\r\n                limit: 14\r\n            }\r\n        })\r\n    }\r\n\r\n    function calculateBgColor(value: number): any {\r\n        return { backgroundColor: value <= 20 ? `rgba(0,255,0,${1 - 3*value/100})` : 'inherit' }\r\n    }\r\n\r\n\r\n\r\n    function compareNumbers(a: number, b: number): number {\r\n        return a - b;\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { StochValueContainer } from './components/StochValueContainer';\r\n\r\nfunction App() {\r\n    const [symbols, setSymbols] = useState([]);\r\n  let symbolsUSDT;\r\n  let symbolsBUSD;\r\n\r\n  const pairs = [];\r\n\r\n  let pairSymbols;\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.binance.com/api/v1/exchangeInfo').then(response => {\r\n            const symbols = response.data.symbols.filter((symbol: any) => symbol.status === 'TRADING');\r\n            symbolsUSDT = symbols.filter((symbol: any) => symbol.quoteAsset === 'USDT');\r\n            symbolsBUSD = symbols.filter((symbol: any) => symbol.quoteAsset === 'BUSD');\r\n            pairSymbols = symbolsUSDT.map((obj: any) => obj.symbol);\r\n            setSymbols(pairSymbols);\r\n        });\r\n    }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <h2>Stoch index for 1h, 4h, 1d periods</h2>\r\n\r\n        <div className='table-container'>\r\n            <div className='stoch-value-container header'>\r\n                <span className='pair-symbol'>Pair symbol</span>\r\n                <span className='stoch-value'>Stoch 1h</span>\r\n                <span className='stoch-value'>Stoch 4h</span>\r\n                <span className='stoch-value'>Stoch 1d</span>\r\n            </div>\r\n            {symbols.map(pairSymbol => {\r\n                return <StochValueContainer key={pairSymbol} pairSymbol={pairSymbol}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}